"""
Django settings for RepBench project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve(strict=True).parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/


import os

SECRET_KEY = os.getenv("SECRET_KEY","AFR*VT%*RVTG&TE*TRE*DERG%TR") # todo make sure env_file is in gjango_gunicorn -> enf_file: .env
DEBUG = int(os.getenv("DEBUG",True))
print("DEBUG: ",DEBUG)


ALLOWED_HOSTS = ['*'] # todo: check this

# Application definition

CORS_ALLOWED_ORIGINS = [
"http://localhost:8000",
"http://127.0.0.1:8000"
]

CORS_ALLOWED_ORIGIN_REGEXES = [
r".*",
]

CORS_ALLOW_METHODS = [
'DELETE',
'GET',
'OPTIONS',
'PATCH',
'POST',
'PUT',
]

CORS_ALLOW_HEADERS = [
'accept',
'accept-encoding',
'authorization',
'content-type',
'dnt',
'origin',
'user-agent',
'x-csrftoken',
'x-requested-with',
]


INSTALLED_APPS = [
    'RepBenchWeb',
    'corsheaders',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]

ROOT_URLCONF = 'RepBenchWeb.urls'

def title(request):
    # return the value you want as a dictionary. you may add multiple values in there.
    return {'Title': "RepBench"}

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'RepBenchWeb.settings.title',
            ],
        },
    },
]

WSGI_APPLICATION = 'RepBenchWeb.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'repair.db',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

from os.path import abspath, basename, dirname, join, normpath
DJANGO_ROOT = dirname(abspath(__file__)) # todo change this depending on file level
PROJECT_ROOT = dirname(DJANGO_ROOT)
SITE_NAME = basename(DJANGO_ROOT)

STATIC_ROOT = join(PROJECT_ROOT, 'run', 'static')

# look for static assets here
STATICFILES_DIRS = [
    join(PROJECT_ROOT, 'static'),
]
MEDIA_ROOT = join(PROJECT_ROOT, 'run', 'media')
# look for static assets here
STATICFILES_DIRS = [
    join(PROJECT_ROOT, 'static'),
]
print(STATICFILES_DIRS, "STATICFILES_DIRS")

PROJECT_TEMPLATES = [
    join(PROJECT_ROOT, 'templates'),
    join(PROJECT_ROOT, 'RepBenchWeb', 'templates'),  # vadetisweb site templates
    join(PROJECT_ROOT, 'RepBenchWeb', 'templates', 'allauth')  # vadetisweb allauth templates
]

import sys
sys.path.append(normpath(join(PROJECT_ROOT, 'apps')))

STATIC_URL = '/static/'
MEDIA_URL = '/media/'


# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'handlers': {
#         'console': {
#             'class': 'logging.StreamHandler',
#         },
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['console'],
#             'level': 'DEBUG',
#         },
#     },
# }

#
# import os
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'RepBenchWeb/static') # this is the directory where the static files are stored,
#
# ]
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')




# ###
# import mimetypes
# mimetypes.add_type("text/css", ".css", True)
# mimetypes.add_type("text/javascript", ".js", True)
# mimetypes.add_type("text/html", ".html", True)
